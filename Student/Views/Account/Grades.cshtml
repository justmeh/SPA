@{
    ViewBag.Title = "Grades";
}

<table class="table" id="gradeTable">
    <tr>
        <th onclick="sortTable(0)">Project Name</th>
        <th onclick="sortTable(1)">Deadline</th>
        <th onclick="sortTable(2)">Mark</th>
        <th onclick="sortTable(3)">Optional</th>
    </tr>
    @{ 
        Student.Models.ApplicationDbContext db = Student.Models.ApplicationDbContext.Create();

        int uid = (int)Session["ID"];

        var grades = db.UsersProjects.Where(up => up.UserID == uid).ToList();

        if (grades.Count != 0)
        {
            int pid = grades[0].ProjectID;

            var projects = db.Projects.Where(p => p.ID == pid).ToList();

            for (int i = 1; i < grades.Count(); i++)
            {
                pid = grades[i].ProjectID;
                var aux = db.Projects.Where(p => p.ID == pid).ToList();
                projects.Add(aux[0]);
            }

            for (int i = 0; i < grades.Count(); i++)
            {
                <tr>
                    <td>@Html.ActionLink(@projects[i].Name.ToString(), "ViewProject", "Project", new { ID = projects[i].ID }, null)</td>
                    <td>@projects[i].Deadline</td>
                    @if (grades[i].Mark == 0)
                    {
                        <td>No mark</td>
                    }
                    else
                    {
                        <td>@grades[i].Mark</td>
                    }      
                    @if (projects[i].Optional)
                    {
                        <td>Yes</td>
                    }
                    else
                    {
                        <td>No</td>
                    }
                </tr>
                }

            }

            db.Dispose();
        }
</table>


<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("gradeTable");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc";
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.getElementsByTagName("TR");
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>